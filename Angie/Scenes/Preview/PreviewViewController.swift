//
//  PreviewViewController.swift
//  Angie
//
//  Created by Suhendra Ahmad on 7/5/17.
//  Copyright (c) 2017 Suhendra Ahmad. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Kingfisher
import XLActionController
import MessageUI

protocol PreviewDisplayLogic: class
{
    func displayPhoto(viewModel: Preview.Photo.ViewModel)
}

class PreviewViewController: UIViewController, PreviewDisplayLogic
{
    var interactor: PreviewBusinessLogic?
    var router: (NSObjectProtocol & PreviewRoutingLogic & PreviewDataPassing)?
    
    // MARK: - Outlets
    @IBOutlet weak var previewImageView: UIImageView!
    
    // MARK: - MemVars & Props
    
    var displayedPhoto = FlickrPhoto()
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = PreviewInteractor()
        let presenter = PreviewPresenter()
        let router = PreviewRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    private func setupUI()
    {
        self.navigationItem.backBarButtonItem?.title = ""
        self.navigationItem.rightBarButtonItem = UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.action, target: self, action: #selector(showActions))
        self.view.backgroundColor = UIColor.black
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        
        setupUI()
        
        loadPhoto()
    }
    
    // MARK: Event
    
    func loadPhoto()
    {
        let request = Preview.Photo.Request()
        interactor?.loadPhoto(request: request)
    }
    
    func displayPhoto(viewModel: Preview.Photo.ViewModel)
    {
        self.displayedPhoto = viewModel.photo
        let url = URL(string: self.displayedPhoto.media.h)!
        
        let resource = ImageResource(downloadURL: url, cacheKey: self.displayedPhoto.media.h)
        previewImageView.kf.indicatorType = .activity
        (previewImageView.kf.indicator?.view as? UIActivityIndicatorView)?.activityIndicatorViewStyle = .whiteLarge
        
        previewImageView.kf.setImage(with: resource, placeholder: nil, options: nil, progressBlock: nil) { (image, error, cacheType, url) in
            // Shall we do some post fx here?
        }
    }
    
    func getImageMetadata(image: UIImage) {
        
    }
    
    // Save preview image into album
    func saveImageToAlbum()
    {
        if let _ = self.previewImageView, let image = self.previewImageView.image {
            UIImageWriteToSavedPhotosAlbum(image, self, #selector(image(_:didFinishSavingWithError:contextInfo:)), nil)
        }
    }

    // Send picture via email
    func sendImageToEmail()
    {
        if MFMailComposeViewController.canSendMail(), let _ = previewImageView, let image = previewImageView.image {
            let mail = MFMailComposeViewController()
            mail.mailComposeDelegate = self;
            
            // Localized our subject and message for multilingual support
            mail.setSubject(NSLocalizedString("Your awesome photo", comment: ""))
            mail.setMessageBody(NSLocalizedString("Angie send you this awesome photo from Flickr", comment: ""), isHTML: false)

            // Attach our image to the mail compose controller
            if let imageData = UIImagePNGRepresentation(image) {
                mail.addAttachmentData(imageData, mimeType: "image/png", fileName: "imageName")
            }
            
            self.present(mail, animated: true, completion: nil)
        }
        else {
            let ac = UIAlertController(title: "Oops", message: "Unable to share", preferredStyle: .alert)
            ac.addAction(UIAlertAction(title: "OK", style: .default))
            present(ac, animated: true)
        }
    }
    
    // MARK: - Action
    
    func showActions()
    {
        let actionController = SkypeActionController()
        
        actionController.addAction(Action("Save Image", style: .default, handler: { action in
            self.saveImageToAlbum()
        }))
        
        actionController.addAction(Action("Open in a browser", style: .default, handler: { action in
            if let url = URL(string: self.displayedPhoto.link) {
                UIApplication.shared.open(url, options: [:], completionHandler: nil)
            }
        }))
        
        actionController.addAction(Action("Share via Email", style: .default, handler: { action in
            
            self.sendImageToEmail()
            
        }))
        
        actionController.addAction(Action("Cancel", style: .cancel, handler: nil))
        
        present(actionController, animated: true, completion: nil)
    }
    
    // MARK: - Delegates 
    
    func image(_ image: UIImage, didFinishSavingWithError error: Error?, contextInfo: UnsafeRawPointer) {
        if let error = error {
            // we got back an error!
            let ac = UIAlertController(title: "Save error", message: error.localizedDescription, preferredStyle: .alert)
            ac.addAction(UIAlertAction(title: "OK", style: .default))
            present(ac, animated: true)
        } else {
            let ac = UIAlertController(title: "Saved!", message: "Your image has been saved to your photo library.", preferredStyle: .alert)
            ac.addAction(UIAlertAction(title: "OK", style: .default))
            present(ac, animated: true)
        }
    }
}

// Handle delegate for MFMailComposeViewControllerDelegate

extension PreviewViewController : MFMailComposeViewControllerDelegate {
    func mailComposeController(_ controller: MFMailComposeViewController, didFinishWith result: MFMailComposeResult, error: Error?) {
        controller.dismiss(animated: true, completion: nil)
    }
}
