//
//  GalleryWorker.swift
//  Angie
//
//  Created by Suhendra Ahmad on 7/4/17.
//  Copyright (c) 2017 Suhendra Ahmad. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire
import SwiftyJSON

class GalleryWorker
{
    typealias GalleryFetchPhotosHandler = (Bool, [FlickrPhoto])->Void
    
    func fetchPhotos(completionHandler: GalleryFetchPhotosHandler?)
    {
        let apiUrl = "https://api.flickr.com/services/feeds/photos_public.gne?format=json&nojsoncallback=1&tagmode=any"
        
        request(apiUrl,
                method: .get,
                parameters: [:],
                encoding: JSONEncoding.default,
                headers: nil).responseJSON
            { (response) in
                
                if let jsonValue = response.result.value {
                    
                    let json = JSON(jsonValue)
                    
                    // Check if the status of the api is fail or not, if it is then do not process the json further
                    if let stat = json["stat"].string {
                        if stat == "fail" {
                            completionHandler?(false, [])
                            return
                        }
                    }
                    
                    var photos = [FlickrPhoto]()
                    if let items = json["items"].array {
                        
                        for item in items {
                            
                            var photo = FlickrPhoto()
                            
                            if let title = item["title"].string {
                                photo.title = title
                            }
                            
                            if let link = item["link"].string {
                                photo.link = link
                            }
                            
                            let media = item["media"]
                            var fMedia = FlickrMedia()
                                
                            if let m = media["m"].string {
                                fMedia.m = m
                                
                                // Due to the nature of flickr, we use postfix _h for high resolution
                                fMedia.h = m.replacingOccurrences(of: "_m", with: "_h")
                            }
                            photo.media = fMedia
                            
                            
                            if let _ = item["date_taken"].string {
                                
                            }
                            
                            if let desc = item["description"].string {
                                photo.description = desc
                            }
                            
                            if let _ = item["published"].string {
                                //photo.published = published
                            }
                            
                            if let author = item["author"].string {
                                // The format for author is: email ("name")
                                // So we need to get only the name
                                // split the string into 3 parts
                                let authors = author.components(separatedBy: "\"")
                                
                                // We get the middle part of the splitted author name
                                let formattedAuthor = authors.count > 1 ? authors[1] : author
                                
                                // Replace special character with blank
                                photo.author = formattedAuthor.replacingOccurrences(of: "\\", with: "")
                            }
                            
                            if let authorId = item["author_id"].string {
                                photo.authorId = authorId
                            }
                            
                            if let tags = item["tags"].string {
                                photo.tags = tags
                            }
                            
                            photos += [photo]
                            
                        }
                        
                    }
                    
                    completionHandler?(true, photos)
                    
                }
                else {
                    completionHandler?(false, [])
                }
        }
    }
}
