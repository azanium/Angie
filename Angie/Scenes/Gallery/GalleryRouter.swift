//
//  GalleryRouter.swift
//  Angie
//
//  Created by Suhendra Ahmad on 7/4/17.
//  Copyright (c) 2017 Suhendra Ahmad. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol GalleryRoutingLogic
{
    func routeToPreview(photo: AnyObject, segue: UIStoryboardSegue?)
}

protocol GalleryDataPassing
{
    var dataStore: GalleryDataStore? { get }
}

class GalleryRouter: NSObject, GalleryRoutingLogic, GalleryDataPassing
{
    weak var viewController: GalleryViewController?
    var dataStore: GalleryDataStore?
    
    // MARK: Routing
    
    func routeToPreview(photo: AnyObject, segue: UIStoryboardSegue? = nil)
    {
        if let segue = segue
        {
            let destinationVC = segue.destination as! PreviewViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToPreview(photo: photo as! FlickrPhoto, destination: &destinationDS)
        }
        else
        {
            let storyboard = UIStoryboard(name: "Main", bundle: nil)
            let destinationVC = storyboard.instantiateViewController(withIdentifier: "PreviewViewController") as! PreviewViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToPreview(photo: photo as! FlickrPhoto, destination: &destinationDS)
            navigateToPreview(source: viewController!, destination: destinationVC)
        }
    }
    
    // MARK: Navigation
    
    func navigateToPreview(source: GalleryViewController, destination: PreviewViewController)
    {
        source.show(destination, sender: nil)
    }
    
    
    // MARK: Passing data
    
    func passDataToPreview(photo: FlickrPhoto, destination: inout PreviewDataStore)
    {
        destination.photo = photo
    }
}
