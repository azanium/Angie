//
//  PreviewViewControllerTests.swift
//  Angie
//
//  Created by Suhendra Ahmad on 7/5/17.
//  Copyright (c) 2017 Suhendra Ahmad. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Angie
import XCTest

class PreviewViewControllerTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: PreviewViewController!
    var window: UIWindow!
    
    // MARK: Test lifecycle
    
    override func setUp()
    {
        super.setUp()
        window = UIWindow()
        setupPreviewViewController()
    }
    
    override func tearDown()
    {
        window = nil
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupPreviewViewController()
    {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "Main", bundle: bundle)
        sut = storyboard.instantiateViewController(withIdentifier: "PreviewViewController") as! PreviewViewController
    }
    
    func loadView()
    {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
    
    // MARK: Test doubles
    
    class PreviewBusinessLogicSpy: PreviewBusinessLogic {
        
        var loadPhotoCalled = false
        
        func loadPhoto(request: Preview.Photo.Request) {
            loadPhotoCalled = true
        }
    }
    
    class PreviewDisplayLogicSpy: PreviewDisplayLogic
    {
        var displayPhotoLoaded = false
        var viewModel: Preview.Photo.ViewModel!
        
        func displayPhoto(viewModel: Preview.Photo.ViewModel) {
            displayPhotoLoaded = true
            self.viewModel = viewModel
        }
    }

    
    // MARK: Tests
    
    func testShouldLoadPhotoWhenViewIsLoaded()
    {
        // Given
        let previewBusinessLogicSpy = PreviewBusinessLogicSpy()
        sut.interactor = previewBusinessLogicSpy
        
        // When
        loadView()
        
        // Then
        XCTAssert(previewBusinessLogicSpy.loadPhotoCalled, "Should load photo when the view is loaded")
    }
    
}
